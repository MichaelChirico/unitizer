% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/options.R
\docType{data}
\name{unitizer.opts}
\alias{.unitizer.base.packages}
\alias{.unitizer.namespace.keep}
\alias{.unitizer.opts.base}
\alias{.unitizer.opts.default}
\alias{.unitizer.opts.sys}
\alias{unitizer.opts}
\title{Global Option State Options}
\format{\preformatted{List of 45
 $ add.smooth           : logi TRUE
 $ browserNLdisabled    : logi FALSE
 $ CBoundsCheck         : logi FALSE
 $ check.bounds         : logi FALSE
 $ citation.bibtex.max  : num 1
 $ continue             : chr "+ "
 $ contrasts            : Named chr [1:2] "contr.treatment" "contr.poly"
  ..- attr(*, "names")= chr [1:2] "unordered" "ordered"
 $ defaultPackages      : chr [1:6] "datasets" "utils" "grDevices" "graphics" ...
 $ demo.ask             : chr "default"
 $ deparse.cutoff       : int 60
 $ device.ask.default   : logi FALSE
 $ digits               : int 7
 $ echo                 : logi TRUE
 $ encoding             : chr "native.enc"
 $ NA                   : NULL
 $ example.ask          : chr "default"
 $ expressions          : int 5000
 $ help.search.types    : chr [1:3] "vignette" "demo" "help"
 $ help.try.all.packages: logi FALSE
 $ internet.info        : num 2
 $ keep.source          : logi TRUE
 $ keep.source.pkgs     : logi FALSE
 $ locatorBell          : logi TRUE
 $ max.print            : int 99999
 $ na.action            : chr "na.omit"
 $ nwarnings            : int 50
 $ OutDec               : chr "."
 $ prompt               : chr "> "
 $ repos                : Named chr "http://cran.r-project.org"
  ..- attr(*, "names")= chr "CRAN"
 $ rl_word_breaks       : chr " \\t\\n\\"\\\\'`><=\%;,|&\{()\}"
 $ scipen               : num 0
 $ show.coef.Pvalues    : logi TRUE
 $ show.error.messages  : logi TRUE
 $ show.signif.stars    : logi TRUE
 $ str                  :List of 3
  ..$ strict.width: chr "no"
  ..$ digits.d    : num 3
  ..$ vec.len     : num 4
 $ str.dendrogram.last  : chr "`"
 $ stringsAsFactors     : logi TRUE
 $ timeout              : num 60
 $ ts.eps               : num 1e-05
 $ ts.S.compat          : logi FALSE
 $ useFancyQuotes       : logi TRUE
 $ verbose              : logi FALSE
 $ warn                 : num 0
 $ warning.length       : int 1000
 $ width                : int 80
}}
\usage{
.unitizer.opts.base

.unitizer.opts.sys

.unitizer.namespace.keep

.unitizer.base.packages

.unitizer.opts.default
}
\description{
Details on how to manage options state settings.
}
\details{
When managing sessions state, there is an unfortunate dependency between
namespaces and options.  In particular, most packages set their namespaces
when they are loaded, not when they are attached.  This means that if we
want to ensure packages have reasonable options set and also wish to
attach and dettach them from the search path, we must fully unload their
namespace and imported namespaces so that options are reset when the
package is re-loaded.

Matters are complicated by the need to allow preservation of certain
packages and namespaces, which by definition are not reloaded.  For state
manipulation to work we must ensure that packages and namespaces that
cannot be unloaded have their options preserved or at a minimum set to
reasonable values.
}
\section{Options Settings}{


To achieve this we have identified all the options that
are used in a freshly loaded R session, and split them into two groups:

\enumerate{
  \item system specific options that are unlikely to affect test
    evaluation (e.g. \code{getOption("papersize")})
  \item other base options typically loaded in a vanilla R session (e.g.
    \code{getOption("width")})
}

\code{unitizer} never modifies system specific options, and these are
specified in \code{.unitizer.opts.sys} as regular expression patterns.
Base options will be set to what we believe are the factory settings for
them, and those values are stored in \code{.unitizer.opts.base} as a
name-value pairs list (an actual list, not a pairlist).

In order to allow for modification of these settings \code{unitizer} does
not use them directly, rather they are applied to the
\code{getOption("unitizer.opts.asis")} and
\code{getOption("unitizer.opts.base")} options, which are then read by
\code{unitizer}.  This allows you to specify different default values
for the base options or to add other options to the list to leave untouched.
If you do modify these settings please take care to ensure that you add your
values to the options rather than completely overwriting them.
DEVNOTES:\itemize{
  \item options, and perhaps unitizer options as a whole, likely to get
    recorded in the future.  Do they need to?  Is it more valuable to make
    sure that a \code{unitizer} evalutes the same across systems, or that
    the \code{unitizer} options affect every unitizer?  Since options are
    already tracked maybe we don't need to record this stuff?
  \item should the option values be done as a delta to the \code{unitizer}
    factory values to make it a little harder to completely mess up the
    factory defaults?
}
}

\section{Un-unloadable Packages And Namespaces}{


For whatever reason you might want to prevent \code{unitizer} from
detaching specific packages or unloading specific namespaces without
completely disabling the reproducible search path feature.  You can do so by
adding the packages and namespaces in question to
\code{getOption("unitizer.search.path.keep")} and
\code{getOption("unitizer.namespace.keep")}.

If you do add packages and namespaces to the "keep" lists then you need
to ensure you also add all the options associated with those namespaces and
the namespaces they depend on / import \code{getOption("unitizer.opts.asis")}
as well.  Alternatively, turn off options tracking (see
\code{\link{unitizerState}}).

Note that some packages cannot be easily loaded and unloaded.  For example
\code{data.table} (<= 1.9.5) cannot be unloaded without causing a segfault
(see issue \href{https://github.com/Rdatatable/data.table/issues/990}{#990}).
For this reason \code{data.table} is included in
\code{getOption("unitizer.namespace.keep")} by default.
}
\seealso{
\code{\link{unitizerState}}
}
\keyword{datasets}

