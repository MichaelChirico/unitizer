% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/search.R
\name{search_path_update}
\alias{search_path_trim}
\alias{search_path_update}
\title{Search Path Management Functions}
\usage{
search_path_update(id, global)

search_path_trim(keep.path = getOption("unitizer.search.path.keep"),
  keep.ns = getOption("unitizer.namespace.keep"),
  global = unitizerGlobal$new())
}
\arguments{
\item{id}{integer(1L) what recorded state to revert to}

\item{global}{reference object of class "unitizerGlobal" that holds the
global settings}

\item{keep}{character names of packages/objects to keep in search path;
note that base packages (see .unitizer.base.packages) that come typically
pre attached are always kept.  The \code{`keep`} packages are an addition
to those.}
}
\description{
Set of functions used to manage search path state.  Strategy is to
keep track of every different search path state encountered which is done
with \code{.global}, and then allow restoring to previous states with these
functions.
}
\details{
While we believe the strategy used here is mostly robust, users can defeat
by changing search paths multiple times withing a single test, which we will
not journal properly, though this is not likely to be a major issue.

\code{search_path_trim} attempts to recreate a clean environment by
unloading all packages and objects that are not loaded by default in the
default R configuration. This also unloads namespaces so that packages can
be reloaded with all corresponding hooks evaluating as with a normal load.
As documented in \code{?detach}, it is likely there may be some issues with
some packages with this approach.  This function is intended to be called
after journaling has been enabled.

\code{`tools:rstudio`} is kept in search path as the default argument because
it is not possible to cleanly unload and reload it because \code{`attach`}
actually attaches a copy of it's argument, not the actual object, and that
causes problems for that search path item.
}
\keyword{internal}

