% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/heal.R
\docType{methods}
\name{updateLs,unitizerItem-method}
\alias{updateLs,unitizerItem-method}
\title{Compare The Objects In Environment for Ref vs. New Item}
\usage{
\S4method{updateLs}{unitizerItem}(x, base.env, new.par.env = NULL, ...)
}
\arguments{
\item{x}{the \code{`\link{unitizerItem-class}`}}

\item{base.env}{the last environment to search through for objects}
}
\value{
\code{`\link{unitizerItem-class}`} object with updated
  \code{`ls`} field and environment reference parent, or FALSE if the item
  has a corrupted environment history
}
\description{
Makes sure that when we call \code{`ls`} when browsing its environment
the information reflecting any limitations on what objects are actually
available to browse is properly reflected.
}
\details{
The status of environment objects is tracked in \code{`x@ls$status`},
where objects of different status are marked like so:
\itemize{
  \item ': object exists in browsing environment, but not the same as
     it was when test was evalaluated
  \item *: object was present during test evaluation but is not
     available in unitizer anymore
  \item **: object was not present during test evaluation, but exists
     in current environment
}

This could definitely be optimized for new items.  It actually represents
a substantial portion of total evaluation time and does a lot of repetitive
stuff that could easily be avoided if we put some work into it.
}
\keyword{internal}

