% Generated by roxygen2 (4.0.2): do not edit by hand
\docType{methods}
\name{editFunNames}
\alias{editFunNames}
\alias{editFunNames,unitizer,name,name-method}
\title{Edit Calls In Unitizer}
\usage{
editFunNames(x, fun.name.old, fun.name.new, ...)

\S4method{editFunNames}{unitizer,name,name}(x, fun.name.old, fun.name.new,
  interactive.only = TRUE, ...)
}
\arguments{
\item{x}{a unitizer object}

\item{fun.name.old}{the name of the function replace}

\item{fun.name.new}{the new name of the function}

\item{...}{unused}

\item{interactive.only}{logical(1L) set to FALSE if you want to allow this to
run in non-interactive mode, but warnings will be suppressed and will
proceed without prompting, obviously...}
}
\value{
a untizer object with function names modifies
}
\description{
Used if you want to change the name of a function you have pre-existing
tests for.  Useful if you want to change the function name, but not have to
re-run and review all the tests since they will no longer match due to the
function name change.
}
\note{
this is a somewhat experimental function, so make sure you backup any
  unitizers before you try to use it.
}
\examples{
\dontrun{
untz <- get_unitizer("tests/unitizer/mytests.unitizer")
untz.edited <- editFunNames(untz, quote(myFun), quote(my_fun))
set_unitizer(untz.edited, "tests/unitizer/mytests.unitizer")
}
}

