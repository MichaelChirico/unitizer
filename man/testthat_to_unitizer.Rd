% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/translate.R
\name{testthat_to_unitizer}
\alias{testthat_to_unitizer}
\title{Convert a \code{testthat} Test File to a \code{unitizer}}
\usage{
testthat_to_unitizer(file.name, target.dir = file.path(dirname(file.name),
  "..", "unitizer"), keep.testthat.call = FALSE)
}
\arguments{
\item{file.name}{a path to the \code{testthat} test file to convert}

\item{target.dir}{the directory to create the \code{unitizer} test file and
test store in, if NULL will not store the result (note return value is
still useful)}

\item{keep.testthat.call}{whether to preserve the \code{testthat} call that
was converted, as a comment (does not apply to \code{test_that} calls)}
}
\value{
character the contents of the translated file (saved to
  \code{target.dir} if that parameter is not \code{NULL})
}
\description{
Converts a \bold{copy} of an existing \code{testthat} test file to a
\code{unitizer} test file and test store. Expressions tested against
expectations are extracted, evaluated, and used as the tests.
}
\details{
Workflow is:
\enumerate{
  \item Run your \code{testthat} test with \code{test_file} or some such to
    ensure they are still passing
  \item Run \code{testthat_to_unitizer}
  \item [optional] use \code{\link{review}} to review the resulting unitizer
  \item [optional] manually clean up the test file
}
Conversion works by identifying calls to exported \code{testthat} functions
that have an \code{object} argument.  Generally speaking this includes
functions of the form \code{expect_*}.

Only top level calls, or calls that are nested within the top level of the
\code{test_that} \code{code} parameter are converted.  For example, if
you nest a \code{expect_true} within anything other than \code{test_that},
including just plain parentheses, that call will not be processed.  We match
the functions to convert based on symbols only; if you assign a
\code{testthat} function to another symbol, or another function to a
\code{testthat} symbol the conversion will not know the difference.
Additionally we expect that the arguments to the \code{testthat} functions
will be the test expressions themselves (as opposed to variables containing
test expressions or the like).

Calls to \code{test_that} are replaced with calls to \code{unitizer_sect}.
Calls to \code{context} are commented out since there currently is no
\code{unitizer} equivalent.  Other \code{testthat} calls are left unchanged
and their return values used as part of the \code{unitizer} tests.

In order for the conversion to succeed \code{testthat} must be installed
on your system.  We do not rely on \code{NAMESPACE} imports to avoid an
import dependency on \code{testthat} that is only required for this
ancillary function, especially since none of the \code{testthat} functions
are called directly.  We use the functions for matching arguments.
}

