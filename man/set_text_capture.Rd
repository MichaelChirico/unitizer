% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/capture.R
\name{set_text_capture}
\alias{get_capture,}
\alias{get_text_capture}
\alias{get_text_capture,}
\alias{release_sinks,}
\alias{release_stderr_sink}
\alias{release_stdout_sink,}
\alias{set_text_capture}
\title{Helper Functions to Capture and Process stdout/err Output}
\usage{
set_text_capture(con, type, capt.disabled = getOption("unitizer.disable.capt",
  FALSE))

get_text_capture(con, file.name, type, no.unsink = FALSE,
  chrs.max = getOption("unitizer.max.capture.chars", 200000L))
}
\arguments{
\item{con}{either a file name or an open connection; make sure that you use
a \code{con} created by \code{set_text_capture} for \code{get_text_capture}
since \code{set_text_capture} detects whether sinking is already in process
and returns FALSE if it is, which then tells \code{get_text_capture} not to
undo the sink}

\item{type}{charcter(1L) in \code{c("output", "message")}}

\item{file.name}{character(1L) file location corresponding to \code{con}}

\item{no.unsink}{logical(1L) for testing purposes so we don't release a sink
when none was actually set}
}
\value{
\itemize{
  \item \code{set_text_capture}: a connection, with attribute "waive" set to
    TRUE if the sink was already sunk and we did not sink it again
  \item \code{get_text_capture}: character
}
}
\description{
\code{`set_text_capture`} sets the sinks, while \code{`get_text_capture`}
retrieves the captured tests and releases the sinks with \code{`release_sinks`}.
\code{`get_capture`} is just a wrapper around \code{`get_text_capture`}.
}
\details{
A lot of the logic here is devoted to detecting whether users set their
own sinks in the course of execution.

All output to \code{stdout} and \code{stderr} is capture in a single file for
each of those streams.  The captures happen sequentially, and are read off
by \code{\link{readChar}}.  It is important to note this method implies that
the files grow throughout the entire test evaluation process, and are only
dumped at the very end.  This is to avoid overhead from repeatedly creating
and opening new connections.
}
\keyword{internal}

