% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/global.R
\docType{class}
\name{unitizerGlobal-class}
\alias{unitizerGlobal}
\alias{unitizerGlobal-class}
\title{Objects / Methods used to Track Global Settings and the Like}
\description{
Implemented as Reference Class
}
\section{Methods}{

\describe{
\item{\code{disable(which = .unitizer.global.settings.names)}}{      Turn off global settings; for `par.env` also unshims the functions used
      to enable tracking of topmost environment.

      Currently not truly needed but left in for future use since the enable/
      disable paradigm is not as important now that `par.env` is being handled
      separately
      }

\item{\code{enable(which = .unitizer.global.settings.names)}}{Turn on global environment tracking, shouldnt be needed since usually
called during initialization}

\item{\code{reset(to, force = FALSE)}}{Reset global settings to a prior State, `force` is typically used When
attempting to do a best effort reset with an on.exit reset b/c there
was a failure or some such elsewhere, particularly within an actual
non full reset attempt.}

\item{\code{resetFull()}}{Reset global settings to what they were on first load; par.env doesnt
matter since only meaningful in context of unitizer}

\item{\code{resetInit()}}{Reset global settings to what they were right after initialization scripts}

\item{\code{shimFuns(funs = .unitizer.base.funs.to.shim)}}{Shimming is solely to ensure that the parent environment tracks position 2
in the search path}

\item{\code{state(mode = "normal")}}{Record state for each of the globals we are tracking; one question here is
whether we want more sophisticated checking against existing settings to
avoid repeatedly storing the same thing.  For now we just check against
the last one}
}}
\keyword{internal}

